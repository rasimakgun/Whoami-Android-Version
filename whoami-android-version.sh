clear
############################### Colors #################################################
lightblue=`tput setaf 14` 
green=`tput setaf 46`     
RED=`tput setaf 196` 
red=`tput setaf 196`     
yellow=`tput setaf 11`    
purple=`tput setaf 129`   
reset=`tput sgr0` 
############################### Root Menu ############################################## 
echo "${green}
             __               
  |  | |__| /  \  /\   |\/| |  
  |/\| |  | \__/ /~~\  |  | |  
                              
    Take back your privacy 
        Android version

 [1] Whoami for rooted device 
 [2] Whoami for non-rooted device"
echo -n "${green}
 > ${reset}" && read rt 
if [[ $rt == "1" ]]; then
############################### Options Menu ############################################   
clear
printf "\e[1;92m Tool requires are installing!\n\e[0m" && sleep 1
if apt-get -y install tor &> /dev/null; then
sleep 1 
else echo  "${RED} Tor install is fail !" && exit 1
fi
if apt-get install curl -y  &> /dev/null; then
sleep 1 
else echo  "${RED} Curl install is fail !" && exit 1
fi
if apt-get install network-manager -y  &> /dev/null; then
sleep 1 
else echo  "${RED} Network-manager install is fail !" && exit 1
fi
if make install &> /dev/null ; then
sleep 1 
else echo  "${RED} Makefile nstall is fail !" && exit 1
fi
printf "\e[1;92m All Requires are installed!\n\e[0m" sleep 2
echo "${green}
             __               
  |  | |__| /  \  /\   |\/| |  
  |/\| |  | \__/ /~~\  |  | |  
                              
    Take back your privacy 
        Android version

 [1] Start Whoami 
 [2] Stop Whoami 
 [3] Restart Whoami  "
echo -n "${green}
 > ${reset}" && read option
############################### Start Whoami ############################################# 
if [[ $option == "1" ]]; then
printf "\e[1;92m Whoami Starting!\n\e[0m" && sleep 2
echo -n "${yellow} * DNS changing" && sleep 2 
if service network-manager stop 
echo "# Generated by Whoami android version 
nameserver 84.200.69.80
nameserver 84.200.70.40
nameserver 91.239.100.100
# NOTE: the libc resolver may not support more than 3 nameserver.
# The nameserver listed below may not be recognized.
nameserver 89.233.43.71
nameserver 192.168.1.1" > /etc/resolv.conf 
service network-manager start ; then
 echo "${green} [OK]" 
else echo  "${RED} [FAIL]" && exit 1
fi
echo -n "${purple} * TOR starting"
if bash Tproxy.sh -t > /dev/null ; then
    echo "${green} [OK]"
else echo  "${RED} [FAIL]" && exit 1
fi
echo -n "${RED} * Your Whoami ip :" && echo -n "${green} "   &&  curl icanhazip.com 2> /dev/null 
echo " "
############################### Stop Whoami ##############################################
elif [[ $option == "2" ]]; then 
printf "\e[1;92m Whoami Stopping!\n\e[0m" && sleep 2
a=$(pwd)
echo -n "${yellow} * Dns setting are set default" && sleep 2 
if service network-manager stop
cd /etc
chattr -i resolv.conf > /dev/null
rm -fr resolv.conf  
service network-manager start ; then
    echo "${green} [OK]" 
else echo  "${RED} [FAIL]" && exit 1
fi
echo -n "${purple} * TOR stopting"
cd $a 
if bash Tproxy.sh -c > /dev/null && service network-manager restart ; then
    echo "${green} [OK]" 
else echo  "${RED} [FAIL]" && exit 1
fi
echo -n "${RED} * Your current ip :" && echo -n "${green} "   &&  curl icanhazip.com 2> /dev/null 
echo " "
############################# Restart Whoami ##############################################
elif [[ $option == "3" ]]; then 
printf "\e[1;92m Whoami Restarting!\n\e[0m" && sleep 1
a=$(pwd)  
echo -n "${yellow} * DNS changing" && sleep 2 
cd /etc
chattr -i resolv.conf > /dev/null
if service network-manager stop 
echo "# Generated by Whoami android version 
nameserver 84.200.69.80
nameserver 84.200.70.40
nameserver 91.239.100.100
# NOTE: the libc resolver may not support more than 3 nameserver.
# The nameserver listed below may not be recognized.
nameserver 89.233.43.71
nameserver 192.168.1.1" > /etc/resolv.conf 
service network-manager start ; then
 echo "${green} [OK]" 
else echo  "${RED} [FAIL]" && exit 1
fi
cd $a
echo -n "${purple} * TOR restarting"
if bash Tproxy.sh -c > /dev/null && bash Tproxy.sh -t > /dev/null ; then
    echo "${green} [OK]" 
else echo  "${RED} [FAIL]" && exit 1
fi
echo -n "${RED} * Your Whoami ip :" && echo -n "${green} "   &&  curl icanhazip.com 2> /dev/null 
fi
echo " "
############################# Non-rooted #######################################################
elif [[ $rt == "2" ]]; then
clear
printf "\e[1;92m Tool requires are installing!\n\e[0m" && sleep 1
if apt-get -y install tor &> /dev/null; then
sleep 1 
else echo  "${RED} Tor install is fail !" && exit 1
fi
if apt-get install curl -y  &> /dev/null; then
sleep 1 
else echo  "${RED} Curl install is fail !" && exit 1
fi
if apt-get install network-manager -y  &> /dev/null; then
sleep 1 
else echo  "${RED} Network-manager install is fail !" && exit 1
fi
if apt-get install proxychains -y  &> /dev/null ; then
sleep 1 
else echo  "${RED} Proxycains install is fail !" && exit 1
fi
printf "\e[1;92m All Requires are installed!\n\e[0m" sleep 2
echo "${green}
             __               
  |  | |__| /  \  /\   |\/| |  
  |/\| |  | \__/ /~~\  |  | |  
                              
    Take back your privacy 
        Android version 
"
printf "\e[1;92m Whoami Starting!\n\e[0m" && sleep 2
echo -n "${yellow} * DNS changing" && sleep 2 
if echo "# Generated by Whoami android version 
nameserver 84.200.69.80
nameserver 84.200.70.40
nameserver 91.239.100.100
# NOTE: the libc resolver may not support more than 3 nameserver.
# The nameserver listed below may not be recognized.
nameserver 89.233.43.71
nameserver 192.168.1.1" > /etc/resolv.conf  ; then
 echo "${green} [OK]" 
else echo  "${RED} [FAIL]" && exit 1
fi
echo -n "${purple} * TOR starting"
if service tor start > /dev/null ; then
    echo "${green} [OK]" && echo "${green} * Whoami has been started " &&  rm -fr /etc/proxychains.conf
touch  /etc/proxychains.conf
echo "# proxychains.conf  VER 3.1
#
#        HTTP, SOCKS4, SOCKS5 tunneling proxifier with DNS.
#	

# The option below identifies how the ProxyList is treated.
# only one option should be uncommented at time,
# otherwise the last appearing option will be accepted
#
#dynamic_chain
#
# Dynamic - Each connection will be done via chained proxies
# all proxies chained in the order as they appear in the list
# at least one proxy must be online to play in chain
# (dead proxies are skipped)
# otherwise EINTR is returned to the app
#
strict_chain
#
# Strict - Each connection will be done via chained proxies
# all proxies chained in the order as they appear in the list
# all proxies must be online to play in chain
# otherwise EINTR is returned to the app
#
#random_chain
#
# Random - Each connection will be done via random proxy
# (or proxy chain, see  chain_len) from the list.
# this option is good to test your IDS :)

# Make sense only if random_chain
#chain_len = 2

# Quiet mode (no output from library)
quiet_mode

# Proxy DNS requests - no leak for DNS data
proxy_dns 

# Some timeouts in milliseconds
tcp_read_time_out 15000
tcp_connect_time_out 8000

# ProxyList format
#       type  host  port [user pass]
#       (values separated by 'tab' or 'blank')
#
#
#        Examples:
#
#            	socks5	192.168.67.78	1080	lamer	secret
#		http	192.168.89.3	8080	justu	hidden
#	 	socks4	192.168.1.49	1080
#	        http	192.168.39.93	8080	
#		
#
#       proxy types: http, socks4, socks5
#       ( auth types supported: ""basic""-http  ""user/pass""-socks" ")""
#
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to ""tor""
socks4 	127.0.0.1 9050" > /etc/proxychains.conf  
for (( ; ; ))
do
green=`tput setaf 46`
reset=`tput sgr0`
echo -n "${green}> ${reset}" && read Pchan
proxychains clear && $Pchan
done
else echo  "${RED} [FAIL]" && exit 1
fi
fi
